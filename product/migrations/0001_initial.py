# Generated by Django 4.2.3 on 2023-07-05 12:15

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProBrand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('brandName', models.CharField(max_length=255, verbose_name='Brand Name')),
                ('brandTotalProduct', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='No. of Product')),
                ('slug', models.SlugField(blank=True, unique=True)),
            ],
            options={
                'verbose_name': 'Brand',
            },
        ),
        migrations.CreateModel(
            name='ProUnit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('unitName', models.CharField(max_length=255, verbose_name='Unit')),
                ('slug', models.SlugField(blank=True, unique=True)),
            ],
            options={
                'verbose_name': 'Unit',
            },
        ),
        migrations.CreateModel(
            name='ProVideoProvider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('videoProviderName', models.CharField(max_length=255, verbose_name='Video Provider')),
                ('slug', models.SlugField(blank=True, unique=True)),
            ],
            options={
                'verbose_name': 'Video Provider',
            },
        ),
        migrations.CreateModel(
            name='ProductAttributes',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('attributeColor', models.CharField(max_length=255, verbose_name='Color')),
                ('attributeSize', models.CharField(max_length=255, verbose_name='Size')),
                ('attributeName', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Attribute')),
                ('attributeImage', models.ImageField(upload_to='fashion/product/attribute', verbose_name='Image')),
                ('attributeTotalProduct', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='No. of Attrbute')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Attribute',
                'verbose_name_plural': 'Attributes',
                'unique_together': {('attributeColor', 'attributeSize')},
            },
        ),
        migrations.CreateModel(
            name='ProCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('categoryName', models.CharField(max_length=255, verbose_name='Name')),
                ('categoryImage', models.ImageField(upload_to='fashion/category', verbose_name='Image')),
                ('categoryProductCommission', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Commission %')),
                ('categoryTotalProduct', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='No. of Product')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='product.procategory')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'unique_together': {('parent', 'slug')},
            },
        ),
    ]
