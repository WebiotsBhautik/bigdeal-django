# Generated by Django 4.2.3 on 2023-07-06 06:25

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('product', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeName',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('attributeName', models.CharField(max_length=255, unique=True, verbose_name='Attribute')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Attribute',
                'verbose_name_plural': 'Attributes',
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('attributeValue', models.CharField(max_length=255, verbose_name='Value')),
                ('attributeImage', models.ImageField(blank=True, null=True, upload_to='fashion/product/attribute', verbose_name='Image')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('attributeName', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='product.attributename', verbose_name='Attribute')),
            ],
            options={
                'verbose_name': 'Attribute Value',
                'verbose_name_plural': 'Attribute Values',
                'unique_together': {('attributeName', 'attributeValue')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('productName', models.CharField(max_length=255, verbose_name='Name')),
                ('productType', models.CharField(choices=[('Simple', 'Simple'), ('Classified', 'Classified')], max_length=255, verbose_name='Type')),
                ('productStatus', models.BooleanField(default=True, verbose_name='Status')),
                ('productDescription', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('productImageFront', models.ImageField(upload_to='fashion/product/front', verbose_name='Front Image')),
                ('productImageBack', models.ImageField(upload_to='fashion/product/back', verbose_name='Back Image')),
                ('productThumImage', models.ImageField(upload_to='fashion/product/thumbnail', verbose_name='Thumbnail')),
                ('productVideoLink', models.CharField(blank=True, max_length=255, null=True, verbose_name='Video Link')),
                ('productWeight', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Weight')),
                ('productDimension', models.CharField(blank=True, max_length=255, null=True, verbose_name='Dimensions (cm)')),
                ('productSKU', models.CharField(blank=True, max_length=255, null=True, verbose_name='SKU')),
                ('productUpsells', models.CharField(blank=True, max_length=255, null=True, verbose_name='Upsells')),
                ('productCreatedAt', models.DateTimeField(auto_now_add=True)),
                ('productUpdatedAt', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('productEndDate', models.DateTimeField(blank=True, null=True)),
                ('productNoOfReview', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='No. of Review')),
                ('productRatingCount', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Rating Count')),
                ('productFinalRating', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Rating (5)')),
                ('productSoldQuantity', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Sold')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('proCategory', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.procategory', verbose_name='Category')),
                ('productBrand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.probrand', verbose_name='Brand')),
            ],
            options={
                'verbose_name': 'Product',
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('productVariantQuantity', models.PositiveIntegerField(verbose_name='Quantiy')),
                ('productVariantStockStatus', models.CharField(blank=True, choices=[('In Stock', 'In Stock'), ('Out Of Stock', 'Out Of Stock'), ('On Backorder', 'On Backorder')], max_length=255, null=True, verbose_name='Stock Status')),
                ('productVariantPrice', models.PositiveIntegerField(verbose_name='Original Price')),
                ('productVariantDiscount', models.PositiveIntegerField(verbose_name='Discount (%)')),
                ('productVariantDiscountPrice', models.PositiveIntegerField(default=0, verbose_name='Savings (Rs.)')),
                ('productVariantFinalPrice', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Discounted Price')),
                ('productVariantTax', models.PositiveIntegerField(verbose_name='Tax (%)')),
                ('productVariantTaxPrice', models.PositiveIntegerField(default=0, verbose_name='Tax Amount (Rs.)')),
                ('productVariantFinalPriceAfterTax', models.PositiveIntegerField(blank=True, null=True, verbose_name='Final Price')),
                ('productVariantCreatedAt', models.DateTimeField(auto_now_add=True)),
                ('productVariantUpdatedAt', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('productVariantAttribute', models.ManyToManyField(blank=True, to='product.attributevalue', verbose_name='Attribute')),
                ('variantProduct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Variant',
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('productReview', models.CharField(max_length=255, verbose_name='Review')),
                ('productRatings', models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], default=0, max_length=10, verbose_name='Rating')),
                ('productName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product', verbose_name='Product Name')),
                ('productReviewByCustomer', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Review',
            },
        ),
        migrations.CreateModel(
            name='ProductMeta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('productSoldQuantity', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Sold')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='product.product', verbose_name='Product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='productCrossSells',
            field=models.ManyToManyField(blank=True, to='product.productvariant', verbose_name='Cross sell'),
        ),
        migrations.AddField(
            model_name='product',
            name='productUnit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.prounit', verbose_name='Unit'),
        ),
        migrations.AddField(
            model_name='product',
            name='productVendor',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Vendor'),
        ),
        migrations.AddField(
            model_name='product',
            name='productVideoProvider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.provideoprovider', verbose_name='Video Provider'),
        ),
        migrations.CreateModel(
            name='MultipleImages',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('multipleImages', models.ImageField(null=True, upload_to='fashion/product/multipleimages', verbose_name='Images')),
                ('multipleImageOfProduct', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
            options={
                'verbose_name': 'Multiple Image',
                'verbose_name_plural': 'Multiple Images',
            },
        ),
    ]
