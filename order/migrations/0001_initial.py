# Generated by Django 4.2.3 on 2023-08-01 08:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('product', '0002_attributename_attributevalue_product_productvariant_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cartTotalPrice', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total Price')),
                ('cartOrdered', models.BooleanField(default=False, verbose_name='Cart Ordered')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('cartByCustomer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderBillingAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('customerFirstName', models.CharField(max_length=200, verbose_name='First Name')),
                ('customerLastName', models.CharField(max_length=200, verbose_name='Last Name')),
                ('customerUsername', models.CharField(blank=True, max_length=200, null=True, verbose_name='Username')),
                ('customerEmail', models.EmailField(max_length=255, verbose_name='Email')),
                ('customerMobile', models.CharField(blank=True, max_length=16, null=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Contact')),
                ('customerAddress1', models.TextField(verbose_name='Address')),
                ('customerAddress2', models.TextField(default='Home', verbose_name='Sub Address')),
                ('customerCountry', models.CharField(max_length=200, verbose_name='Country')),
                ('customerCity', models.CharField(max_length=200, verbose_name='City')),
                ('customerZip', models.CharField(max_length=200, verbose_name='Zip')),
                ('orderTransactionId', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transaction Id')),
                ('orderId', models.CharField(blank=True, max_length=255, null=True, verbose_name='Order ID')),
                ('orderBillingAddressCreatedAt', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('orderBillingAddressModifiedAt', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Billing Address',
                'verbose_name_plural': 'Billing Address',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('paymentMethodName', models.CharField(max_length=255, verbose_name='Method Name')),
                ('paymentMethodCreatedAt', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('paymentMethodModifiedAt', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('slug', models.SlugField(blank=True, unique=True)),
            ],
            options={
                'verbose_name': 'Payment Method',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('wishlistByCustomer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('wishlistProducts', models.ManyToManyField(blank=True, to='product.productvariant', verbose_name='Products')),
            ],
        ),
        migrations.CreateModel(
            name='ProductOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('productOrderCreatedAt', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('productOrderModifiedAt', models.DateTimeField(auto_now=True)),
                ('productOrderOrderId', models.CharField(blank=True, max_length=255, null=True, verbose_name='Order ID')),
                ('productOrderPaymentTransactionId', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transaction Id')),
                ('productOrderTrackingId', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tracking ID')),
                ('productOrderedProductQuantity', models.PositiveIntegerField(verbose_name='Quantity')),
                ('productOrderedOrNot', models.BooleanField(default=False, verbose_name='Ordered')),
                ('productOrderTotalPrice', models.PositiveBigIntegerField(default=0, verbose_name='Price (Exc. Disc)')),
                ('productOrderFinalPrice', models.PositiveBigIntegerField(default=0, verbose_name='Price (Inc. Disc)')),
                ('productOrderSavings', models.PositiveBigIntegerField(default=0, verbose_name='Saving (INR.)')),
                ('productVariantOrderTax', models.PositiveIntegerField(default=0, verbose_name='Tax (%)')),
                ('productVariantOrderTaxPrice', models.PositiveIntegerField(default=0, verbose_name='Tax Amount (Rs.)')),
                ('productVariantOrderFinalPriceAfterTax', models.IntegerField(blank=True, null=True, verbose_name='Price (After Tax)')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('productOrderBillingAddress', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='order.orderbillingaddress')),
                ('productOrderedByCustomer', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='pobc', to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('productOrderedCart', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='order.cart')),
                ('productOrderedProducts', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='product.productvariant', verbose_name='Product')),
                ('productOrderedProductsvendor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Vendor')),
            ],
            options={
                'verbose_name': 'Product Order',
            },
        ),
        migrations.CreateModel(
            name='OrderTracking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('trackingOrderOrderId', models.CharField(blank=True, max_length=255, null=True, verbose_name='Order ID')),
                ('trackingOrderOrderTransactionId', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transaction Id')),
                ('trackingOrderStatus', models.CharField(blank=True, choices=[('Order Processing', 'Order Processing'), ('Pre-Production', 'Pre-Production'), ('In Production', 'In Production'), ('Shipped', 'Shipped'), ('Delivered', 'Delivered')], default='Order Processing', max_length=255, null=True, verbose_name='Status')),
                ('trackingCreatedAt', models.DateTimeField(auto_now_add=True)),
                ('trackingModifiedAt', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('trackingOrder', models.ManyToManyField(blank=True, related_name='tracking_orders', to='product.productvariant', verbose_name='Product')),
                ('trackingOrderCustomer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='toc', to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('trackingOrderVendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tov', to=settings.AUTH_USER_MODEL, verbose_name='Vendor')),
            ],
            options={
                'verbose_name': 'Tracking',
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('orderAmount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Amount')),
                ('orderPaymentTransactionId', models.CharField(max_length=255, unique=True, verbose_name='Transaction Id')),
                ('orderPaymentOrderId', models.CharField(blank=True, max_length=255, null=True, verbose_name='Order ID')),
                ('orderPaymentStatus', models.BooleanField(default=False, verbose_name='Status')),
                ('orderPaymentCreatedAt', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('orderPaymentModifiedAt', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('orderPaymentFromCustomer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opfc', to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('orderPaymentMethodName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.paymentmethod', verbose_name='Payment Method')),
            ],
            options={
                'verbose_name': 'Payment',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Order ID')),
                ('orderCreatedAt', models.DateTimeField(auto_now_add=True)),
                ('orderModifiedAt', models.DateTimeField(auto_now=True)),
                ('orderTransactionId', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transaction Id')),
                ('orderedOrNot', models.BooleanField(default=False, verbose_name='Status')),
                ('orderDiscount', models.PositiveBigIntegerField(default=0, verbose_name='Discount (%)')),
                ('orderTotalPrice', models.PositiveBigIntegerField(default=0, verbose_name='Price After Tax')),
                ('orderPrice', models.PositiveBigIntegerField(default=0, verbose_name='Price Before Tax')),
                ('orderSavings', models.PositiveBigIntegerField(default=0, verbose_name='Saving (Rs.)')),
                ('orderTotalTax', models.PositiveBigIntegerField(default=0, verbose_name='Order Tax')),
                ('orderOfferDiscount', models.PositiveBigIntegerField(default=0, verbose_name='Offer Dis Amount')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('orderBillingAddress', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='order.orderbillingaddress')),
                ('orderPayment', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='order.orderpayment')),
                ('orderedByCustomer', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='obc', to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('orderedCart', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='order.cart')),
            ],
            options={
                'verbose_name': 'Order',
            },
        ),
        migrations.CreateModel(
            name='Compare',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('compareByCustomer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('compareProducts', models.ManyToManyField(blank=True, to='product.productvariant', verbose_name='Products')),
            ],
        ),
        migrations.CreateModel(
            name='CartProducts',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cartProductQuantity', models.PositiveIntegerField(verbose_name='Quantity')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.cart', verbose_name='Cart')),
                ('cartByCustomer', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('cartProduct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.productvariant', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Cart Product',
                'verbose_name_plural': 'Cart Products',
            },
        ),
    ]
