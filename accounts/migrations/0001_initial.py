# Generated by Django 4.2.3 on 2023-07-04 10:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('username', models.CharField(max_length=200, verbose_name='Name')),
                ('profilePicture', models.ImageField(blank=True, null=True, upload_to='fashion/user', verbose_name='Avtar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_vendor', models.BooleanField(default=False, editable=False)),
                ('is_customer', models.BooleanField(default=False, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vendorName', models.CharField(max_length=200, verbose_name='Name')),
                ('vendorContact', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Contact')),
                ('vendorGst', models.CharField(max_length=15, verbose_name='GST No.')),
                ('vendorAddress', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('vendorWalletBalance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Wallet Balance')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Email')),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('otpNumber', models.CharField(max_length=50, null=True)),
                ('otpExpiryTime', models.DateTimeField(blank=True, null=True)),
                ('TemporaryDataByUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Temporary Data',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('customerName', models.CharField(blank=True, max_length=200, null=True, verbose_name='Name')),
                ('customerContact', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Contact')),
                ('customerAddress', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('customerWalletBalance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Wallet Balance')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Email')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('adminName', models.CharField(blank=True, max_length=200, null=True, verbose_name='Name')),
                ('adminContact', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Contact')),
                ('adminAddress', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('adminWalletBalance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Wallet Balance')),
                ('adminCommissionProfit', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Commission Profit')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Email')),
            ],
            options={
                'verbose_name_plural': 'Admin Profiles',
            },
        ),
    ]
